; Sample diaplan for setting extensions to Pause with reasons
; (by setting custom_pauses to 1 in setup inside asternic web gui
; you can display the reason in the realtime view).
;
; In order for this to work in FreePBX/Elastix you must include 
; this file in two places. First copy this file into /etc/asterisk
; Then edit /etc/asterisk/extensions_custom.conf and add at the very
; end this line:
;
; #include extensions_custom_asternic_pauses.conf
;
; Then on the same file, look at the top to the from-internal-custom
; context and add a line like this:
; 
; [from-internal-custom]
; include => asternic-pauses
;
; Finally reload the dialplan with the command:
; 
; asterisk -rx "dialplan reload"
;
[asternic-pauses]
exten => *50,1,Answer
exten => *50,n,Set(CHAN=${CUT(CHANNEL,-,1)})
exten => *50,n,Set(CHAN=${CUT(CHAN,/,2)})
exten => *50,n,Set(AMPUSER=${DB(DEVICE/${CHAN}/user)})
exten => *50,n,PauseQueueMember(,Local/${AMPUSER}@from-queue/n,,Lunch)
exten => *50,n,Noop(Pause Status ${PQMSTATUS})
exten => *50,n,GotoIf($["${PQMSTATUS}" = "PAUSED"]?log)
exten => *50,n,Hangup
exten => *50,n(log),QueueLog(NONE,${UNIQUEID},${DB(AMPUSER/${AMPUSER}/cidname)},PAUSE,Lunch)
exten => *50,n,Set(DB(PAUSECUSTOM/AGENT/${AMPUSER})=Lunch:${EPOCH})
exten => *50,n,Hangup

exten => *51,1,Answer
exten => *51,n,Set(CHAN=${CUT(CHANNEL,-,1)})
exten => *51,n,Set(CHAN=${CUT(CHAN,/,2)})
exten => *51,n,Set(AMPUSER=${DB(DEVICE/${CHAN}/user)})
exten => *51,n,PauseQueueMember(,Local/${AMPUSER}@from-queue/n,,Break)
exten => *51,n,Noop(Pause Status ${PQMSTATUS})
exten => *51,n,GotoIf($["${PQMSTATUS}" = "PAUSED"]?log)
exten => *51,n,Hangup
exten => *51,n(log),QueueLog(NONE,${UNIQUEID},${DB(AMPUSER/${AMPUSER}/cidname)},PAUSE,Break)
exten => *51,n,Set(DB(PAUSECUSTOM/AGENT/${AMPUSER})=Break:${EPOCH})
exten => *51,n,Hangup

exten => *59,1,Answer
exten => *59,n,Set(CHAN=${CUT(CHANNEL,-,1)})
exten => *59,n,Set(CHAN=${CUT(CHAN,/,2)})
exten => *59,n,Set(AMPUSER=${DB(DEVICE/${CHAN}/user)})
exten => *59,n,UnPauseQueueMember(,Local/${AMPUSER}@from-queue/n)
exten => *59,n,DBDel(PAUSECUSTOM/AGENT/${AMPUSER})
exten => *59,n,Noop(Pause Status ${PQMSTATUS})
exten => *59,n,Hangup

[app-all-queue-pause-toggle]
include => app-all-queue-pause-toggle-custom
exten => s,1(start),Answer
exten => s,n,Wait(1)
exten => s,n,Macro(user-callerid,)
exten => s,n,AGI(queue_devstate.agi,toggle-pause-all,${AMPUSER})
exten => s,n,Playback(dictate/pause&${IF($[${TOGGLEPAUSED}]?activated:de-activated)})
exten => s,n,GotoIf(${TOGGLEPAUSED}?activated)
exten => s,n,Noop('deactivated')
exten => s,n,DBDel(PAUSECUSTOM/AGENT/${AMPUSER})
exten => s,n,Goto(end)
exten => s,n(activated),Noop('activated')
exten => s,n,Set(DB(PAUSECUSTOM/AGENT/${AMPUSER})=Break:${EPOCH})
exten => s,n(end),Macro(hangupcall,)

;--== end of [app-all-queue-pause-toggle] ==--;
